{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\darji\\\\Documents\\\\reactjs\\\\demoapp\\\\src\\\\hooks\\\\counter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './counter.css';\nlet count = 0;\nlet dateTime;\nlet timeOnRefresh;\n\nconst Counter = () => {\n  _s();\n\n  // const state = useState();\n  const [count, setCount] = useState(0);\n  const [time, setTime] = useState(dateTime);\n  const [timeOnTime, setTimeOnTime] = useState(timeOnRefresh);\n\n  const IncNum = () => {\n    setCount(count + 1);\n  };\n\n  const getTime = () => {\n    const dateTime = new Date().toLocaleTimeString();\n    setTime(dateTime);\n  };\n\n  const getTimeOnTime = () => {\n    let timeOnRefresh = new Date().toLocaleTimeString();\n    setTimeOnTime(timeOnRefresh);\n  };\n\n  setInterval(getTimeOnTime, 1000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: IncNum,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getTime,\n        children: \"Get Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: timeOnTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Counter, \"8hglId8vcTS5e3iz8iA0pPkMch4=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/darji/Documents/reactjs/demoapp/src/hooks/counter.jsx"],"names":["React","useState","count","dateTime","timeOnRefresh","Counter","setCount","time","setTime","timeOnTime","setTimeOnTime","IncNum","getTime","Date","toLocaleTimeString","getTimeOnTime","setInterval"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,eAAP;AAEA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,QAAJ;AACA,IAAIC,aAAJ;;AAEA,MAAMC,OAAO,GAAG,MAAI;AAAA;;AAEhB;AACD,QAAM,CAACH,KAAD,EAAOI,QAAP,IAAmBL,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACM,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAACE,QAAD,CAA/B;AAEH,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAACG,aAAD,CAA5C;;AAEA,QAAMO,MAAM,GAAG,MAAM;AACjBL,IAAAA,QAAQ,CAACJ,KAAK,GAAC,CAAP,CAAR;AACH,GAFD;;AAIA,QAAMU,OAAO,GAAG,MAAM;AAClB,UAAMT,QAAQ,GAAG,IAAIU,IAAJ,GAAWC,kBAAX,EAAjB;AACAN,IAAAA,OAAO,CAACL,QAAD,CAAP;AACH,GAHD;;AAKA,QAAMY,aAAa,GAAG,MAAM;AACxB,QAAIX,aAAa,GAAG,IAAIS,IAAJ,GAAWC,kBAAX,EAApB;AACAJ,IAAAA,aAAa,CAACN,aAAD,CAAb;AAEH,GAJD;;AAKAY,EAAAA,WAAW,CAACD,aAAD,EAAe,IAAf,CAAX;AACI,sBACI;AAAA,2BACA;AAAA,8BACI;AAAA,kBAAKb;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAES,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAEK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAMI;AAAA,kBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAcH,CArCD;;GAAMJ,O;;KAAAA,O;AAuCN,eAAeA,OAAf","sourcesContent":["import React,{useState} from \"react\";\r\nimport './counter.css';\r\n\r\nlet count = 0;\r\nlet dateTime;\r\nlet timeOnRefresh;\r\n\r\nconst Counter = ()=>{\r\n\r\n    // const state = useState();\r\n   const [count,setCount] = useState(0)\r\n   const [time,setTime] = useState(dateTime);\r\n  \r\nconst [timeOnTime, setTimeOnTime] = useState(timeOnRefresh)\r\n\r\nconst IncNum = () => {\r\n    setCount(count+1);\r\n}\r\n\r\nconst getTime = () => {\r\n    const dateTime = new Date().toLocaleTimeString();\r\n    setTime(dateTime);\r\n}\r\n\r\nconst getTimeOnTime = () => {\r\n    let timeOnRefresh = new Date().toLocaleTimeString();\r\n    setTimeOnTime(timeOnRefresh);\r\n    \r\n}\r\nsetInterval(getTimeOnTime,1000);\r\n    return(\r\n        <>\r\n        <div>\r\n            <h1>{count}</h1>\r\n            <button onClick={IncNum}>Click me</button>\r\n            <h1>{time}</h1>\r\n            <button onClick={getTime}>Get Time</button>\r\n\r\n            <h1>{timeOnTime}</h1>\r\n        </div>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}