[{"C:\\Users\\darji\\Documents\\reactjs\\demoapp\\src\\index.js":"1","C:\\Users\\darji\\Documents\\reactjs\\demoapp\\src\\Card.jsx":"2","C:\\Users\\darji\\Documents\\reactjs\\demoapp\\src\\App.js":"3","C:\\Users\\darji\\Documents\\reactjs\\demoapp\\src\\netflixData.jsx":"4","C:\\Users\\darji\\Documents\\reactjs\\demoapp\\src\\googleData.jsx":"5","C:\\Users\\darji\\Documents\\reactjs\\demoapp\\src\\SlotMachine.jsx":"6","C:\\Users\\darji\\Documents\\reactjs\\demoapp\\src\\SlotM.js":"7"},{"size":307,"mtime":1610181847918,"results":"8","hashOfConfig":"9"},{"size":625,"mtime":1610173727107,"results":"10","hashOfConfig":"9"},{"size":1296,"mtime":1610176410857,"results":"11","hashOfConfig":"9"},{"size":1003,"mtime":1610175675204,"results":"12","hashOfConfig":"9"},{"size":1195,"mtime":1610176232933,"results":"13","hashOfConfig":"9"},{"size":631,"mtime":1610178905667,"results":"14","hashOfConfig":"9"},{"size":655,"mtime":1610181771905,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"1k4xo34",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\darji\\Documents\\reactjs\\demoapp\\src\\index.js",["34"],"import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from \"./App\";\nimport SlotM from \"./SlotM\";\n\n\n\nconst series = 'netflix';\n\nReactDOM.render(\n    <>\n        <App/> \n        <SlotM/>\n\n    {/* {(series == 'netflix') ? 'Netflix' : 'Amazon'} */}\n    </>\n    ,document.getElementById('root'));","C:\\Users\\darji\\Documents\\reactjs\\demoapp\\src\\Card.jsx",["35"],"import React from \"react\";\r\n\r\nfunction Card(props){\r\n    return(\r\n        <div className=\"cards\">\r\n            <div className=\"card\">\r\n            <img src={props.imgsrc} alt=\"mypic\" className=\"card__img\"/>\r\n                <div className=\"card__info\">\r\n                    <span className=\"card_category\">{props.title}</span>\r\n                    <h3 className=\"card_title\">{props.sname}</h3>\r\n                    <a href={props.link} target=\"_blank\">\r\n                        <button>Watch Now</button>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;",["36","37"],"C:\\Users\\darji\\Documents\\reactjs\\demoapp\\src\\App.js",["38","39"],"import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport Card from \"./Card\";\r\nimport './index.css';\r\nimport data from \"./netflixData\";\r\nimport googleData from \"./googleData\";\r\n\r\n\r\nconst App = () =>{\r\n    return(\r\n        <div>\r\n            <h1 className=\"heading_style\">List of top nexflix series in 2021</h1>\r\n\r\n\r\n            {data.map((val)=>{\r\n                console.log(val);\r\n                return(\r\n                    <Card \r\n                    key={val.id}\r\n                    imgsrc={val.imgsrc} \r\n                    title={val.title} \r\n                    sname={val.sname} \r\n                    link={val.link} />\r\n                \r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst AppGoogle = () =>{\r\n    return(\r\n        <div>\r\n            <h1 className=\"heading_style\">List of Google Product</h1>\r\n\r\n\r\n            {googleData.map((val)=>{\r\n                console.log(val);\r\n                return(\r\n                    <Card \r\n                    key={val.id}\r\n                    imgsrc={val.imgsrc} \r\n                    title={val.title} \r\n                    sname={val.sname} \r\n                    link={val.link} />\r\n                \r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n   \r\n\r\n  ","C:\\Users\\darji\\Documents\\reactjs\\demoapp\\src\\netflixData.jsx",[],"C:\\Users\\darji\\Documents\\reactjs\\demoapp\\src\\googleData.jsx",[],"C:\\Users\\darji\\Documents\\reactjs\\demoapp\\src\\SlotMachine.jsx",["40","41"],"C:\\Users\\darji\\Documents\\reactjs\\demoapp\\src\\SlotM.js",[],{"ruleId":"42","severity":1,"message":"43","line":8,"column":7,"nodeType":"44","messageId":"45","endLine":8,"endColumn":13},{"ruleId":"46","severity":1,"message":"47","line":11,"column":21,"nodeType":"48","endLine":11,"endColumn":58},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"42","severity":1,"message":"53","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":16},{"ruleId":"42","severity":1,"message":"54","line":32,"column":7,"nodeType":"44","messageId":"45","endLine":32,"endColumn":16},{"ruleId":"55","severity":1,"message":"56","line":9,"column":10,"nodeType":"57","messageId":"58","endLine":9,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":9,"column":19,"nodeType":"57","messageId":"58","endLine":9,"endColumn":21},"no-unused-vars","'series' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"'ReactDOM' is defined but never used.","'AppGoogle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]